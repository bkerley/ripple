{"name":"Ripple: Riak on Rails","tagline":"A rich Ruby client for Riak, Basho's distributed database","body":"# `ripple`: Riak Document Models [![Build Status](https://secure.travis-ci.org/basho/ripple.png)](http://travis-ci.org/basho/ripple)\r\n\r\n`ripple` is a rich Ruby modeling layer for Riak, Basho's distributed\r\ndatabase that contains an ActiveModel-based document abstraction which\r\nis inspired by ActiveRecord, DataMapper, and MongoMapper.\r\n\r\n## Dependencies\r\n\r\n`ripple` requires Ruby 1.8.7 or later and versions 3 or above of\r\nActiveModel and ActiveSupport (and their dependencies, including\r\ni18n). Naturally, it also depends on the `riak-client` gem to connect\r\nto Riak.\r\n\r\nDevelopment dependencies are handled with bundler. Install bundler\r\n(`gem install bundler`) and run this command in each sub-project to\r\nget started:\r\n\r\n``` bash\r\n$ bundle install\r\n```\r\n\r\nRun the RSpec suite using `bundle exec`:\r\n\r\n``` bash\r\n$ bundle exec rake spec\r\n```\r\n\r\n## Document Model Examples\r\n\r\n``` ruby\r\nrequire 'ripple'\r\n\r\n# Documents are stored as JSON objects in Riak but have rich\r\n# semantics, including validations and associations.\r\nclass Email\r\n  include Ripple::Document\r\n  property :from,    String, :presence => true\r\n  property :to,      String, :presence => true\r\n  property :sent,    Time,   :default => proc { Time.now }\r\n  property :body,    String\r\nend\r\n\r\nemail = Email.find(\"37458abc752f8413e\")  # GET /riak/emails/37458abc752f8413e\r\nemail.from = \"someone@nowhere.net\"\r\nemail.save                               # PUT /riak/emails/37458abc752f8413e\r\n\r\nreply = Email.new\r\nreply.from = \"justin@bashoooo.com\"\r\nreply.to   = \"sean@geeemail.com\"\r\nreply.body = \"Riak is a good fit for scalable Ruby apps.\"\r\nreply.save                               # POST /riak/emails (Riak-assigned key)\r\n\r\n# Documents can contain embedded documents, and link to other standalone documents \r\n# via associations using the many and one class methods.\r\nclass Person\r\n  include Ripple::Document\r\n  property :name, String\r\n  many :addresses\r\n  many :friends, :class_name => \"Person\"\r\n  one :account\r\nend\r\n\r\n# Account and Address are embeddable documents\r\nclass Account\r\n  include Ripple::EmbeddedDocument\r\n  property :paid_until, Time\r\n  embedded_in :person # Adds \"person\" method to get parent document\r\nend\r\n\r\nclass Address\r\n  include Ripple::EmbeddedDocument\r\n  property :street, String\r\n  property :city, String\r\n  property :state, String\r\n  property :zip, String\r\nend\r\n\r\nperson = Person.find(\"adamhunter\")\r\nperson.friends << Person.find(\"seancribbs\") # Links to people/seancribbs with tag \"friend\"\r\nperson.addresses << Address.new(:street => \"100 Main Street\") # Adds an embedded address\r\nperson.account.paid_until = 3.months.from_now\r\n```\r\n\r\n\r\n## Configuration Example\r\n\r\nWhen using Ripple with Rails 3, add ripple to your Gemfile and then run the `ripple` generator.  This will generate a test harness, some MapReduce functions and a configuration file. Example:\r\n\r\n```\r\n$ rails g ripple\r\n      create  config/ripple.yml\r\n      create  app/mapreduce\r\n      create  app/mapreduce/contrib.js\r\n      create  app/mapreduce/ripple.js\r\n      create  test/ripple_test_helper.rb\r\n      insert  test/test_helper.rb\r\n      insert  test/test_helper.rb\r\n```\r\n\r\n`config/ripple.yml` should contain your Riak connection information, and settings for the test server. Example:\r\n\r\n``` yaml\r\n# Configure Riak connections for the Ripple library.\r\ndevelopment:\r\n  http_port: 8098\r\n  pb_port: 8087\r\n  host: 127.0.0.1\r\n\r\n# The test environment has additional keys for configuring the\r\n# Riak::TestServer for your test/spec suite:\r\n#\r\n# * bin_dir specifies the path to the \"riak\" script that you use to\r\n#           start Riak (just the directory)\r\n# * js_source_dir specifies where your custom Javascript functions for\r\n#           MapReduce should be loaded from. Usually app/mapreduce.\r\ntest:\r\n  http_port: 9000\r\n  pb_port: 9002\r\n  host: 127.0.0.1\r\n  bin_dir: /usr/local/bin   # Default for Homebrew.\r\n  js_source_dir: <%%= Rails.root + \"app/mapreduce\" %>\r\n\r\nproduction:\r\n  http_port: 8098\r\n  pb_port: 8087\r\n  host: 127.0.0.1\r\n```\r\n\r\n`require 'ripple/railtie'` from your `config/application.rb` file to complete the integration.\r\n\r\n\r\n## How to Contribute\r\n\r\n* Fork the project on [Github](http://github.com/basho/ripple).  If you have already forked, use `git pull --rebase` to reapply your changes on top of the mainline. Example:\r\n\r\n    ``` bash\r\n    $ git checkout master\r\n    $ git pull --rebase basho master\r\n    ```\r\n* Create a topic branch. If you've already created a topic branch, rebase it on top of changes from the mainline \"master\" branch. Examples:\r\n  * New branch:\r\n\r\n        ``` bash\r\n        $ git checkout -b topic\r\n        ```\r\n  * Existing branch:\r\n\r\n        ``` bash\r\n        $ git rebase master\r\n        ```\r\n* Write an RSpec example or set of examples that demonstrate the necessity and validity of your changes. **Patches without specs will most often be ignored. Just do it, you'll thank me later.** Documentation patches need no specs, of course.\r\n* Make your feature addition or bug fix. Make your specs and stories pass (green).\r\n* Run the suite using multiruby or rvm to ensure cross-version compatibility.\r\n* Cleanup any trailing whitespace in your code (try @whitespace-mode@ in Emacs, or \"Remove Trailing Spaces in Document\" in the \"Text\" bundle in Textmate).\r\n* Commit, do not mess with Rakefile or VERSION.  If related to an existing issue in the [tracker](http://github.com/basho/ripple/issues), include \"Closes #X\" in the commit message (where X is the issue number).\r\n* Send me a pull request.\r\n\r\n## License & Copyright\r\n\r\nCopyright &copy;2010-2012 Sean Cribbs and Basho Technologies, Inc.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\r\n\r\n[http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}